syntax = "proto3";

package computation;

// The computation service definition.
service Computation {
  // Synchronous RPC
  rpc Add(AddRequest) returns (AddResponse);
  rpc Sort(SortRequest) returns (SortResponse);

  // Asynchronous RPC
  rpc AddAsync(AddRequest) returns (AckResponse);
  rpc SortAsync(SortRequest) returns (AckResponse);
  rpc GetAddResult(ResultRequest) returns (AddResponse);
  rpc GetSortResult(ResultRequest) returns (SortResponse);
}

// The request message containing two integers.
message AddRequest {
  int32 a = 1;
  int32 b = 2;
}

// The response message containing the sum of the two integers.
message AddResponse {
  int32 result = 1;
}

// The request message containing an array of integers.
message SortRequest {
  repeated int32 array = 1;
}

// The response message containing the sorted array.
message SortResponse {
  repeated int32 sorted_array = 1;
}

// The acknowledgment message.
message AckResponse {
  string message = 1;
}

// The request message for fetching results.
message ResultRequest {
  string task_id = 1;
}
